name: SonarQube
on:
  push:
    branches:
      - develop
  pull_request:
jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: v2.10.2

      - name: Create environment file
        run: |
          mkdir -p backend/dotenv_files
          echo "DEBUG=1" > backend/dotenv_files/.env
          echo "SECRET_KEY=github-actions-test-key" >> backend/dotenv_files/.env
          echo "ALLOWED_HOSTS=*" >> backend/dotenv_files/.env
          echo "POSTGRES_ENGINE=django.db.backends.postgresql" >> backend/dotenv_files/.env
          echo "POSTGRES_DB=postgres" >> backend/dotenv_files/.env
          echo "POSTGRES_USER=postgres" >> backend/dotenv_files/.env
          echo "POSTGRES_PASSWORD=postgres" >> backend/dotenv_files/.env
          echo "POSTGRES_HOST=db" >> backend/dotenv_files/.env  
          echo "POSTGRES_PORT=5432" >> backend/dotenv_files/.env

      - name: Start services (backend only)
        run: |
          docker-compose up -d backend
          docker-compose ps

      - name: Run migrations
        run: |
          docker-compose exec -T backend python manage.py migrate --noinput

      - name: Run tests with coverage
        run: |
          docker-compose exec -T backend mkdir -p /tmp/coverage
          docker-compose exec -T backend chmod 777 /tmp/coverage
          docker-compose exec -T backend bash -c "COVERAGE_FILE=/tmp/coverage/.coverage coverage run --source='.' manage.py test"
          docker-compose exec -T backend bash -c "COVERAGE_FILE=/tmp/coverage/.coverage coverage xml -o /tmp/coverage/coverage.xml"
          mkdir -p coverage-reports
          docker cp $(docker-compose ps -q backend):/tmp/coverage/coverage.xml ./coverage-reports/

      - name: Configure SonarQube
        run: |
          cat > sonar-project.properties << EOF
          sonar.projectKey=Gustavo-Jun-Tsuji_mc656-project-2025
          sonar.organization=your-organization
          sonar.sources=backend,frontend/src
          sonar.tests=backend/core/tests
          sonar.python.coverage.reportPaths=coverage-reports/coverage.xml
          sonar.exclusions=**/migrations/**,**/__pycache__/**,**/node_modules/**,**/tests/**
          sonar.test.inclusions=**/tests.py,**/tests/**/*.py
          sonar.sourceEncoding=UTF-8
          EOF

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
